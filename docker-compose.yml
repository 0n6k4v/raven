services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      cache_from:
        - frontend:latest
    ports:
      - "80:80"
    environment:
      - VITE_SPHERE_API_KEY=${VITE_SPHERE_API_KEY}
      - VITE_LONGDO_MAP_API_KEY=${VITE_LONGDO_MAP_API_KEY}
      - VITE_API_URL=http://backend-api:8000
      - NODE_ENV=production
    depends_on:
      - backend-api
    networks:
      - app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  backend-api:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
      cache_from:
        - backend-api:latest
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db-service:5432/ai_detection
      - ML_SERVICE_URL=http://ai-inference-service:8080
      - AI_SERVICE_URL=http://ai-inference-service:8080
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    depends_on:
      db-service:
        condition: service_healthy
      # ai-inference-service:
      #   condition: service_started
    networks:
      - app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1G

  # ai-inference-service:
  #   build:
  #     context: ./ai-inference-service
  #     dockerfile: Dockerfile
  #     cache_from:
  #       - ai-inference-service:latest
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - HOST=0.0.0.0
  #     - PORT=8080
  #     - MODEL_PATH=/app/model
  #     - AI_MODE=segment_only
  #     - LOG_LEVEL=INFO
  #     - DEBUG=false
  #     - ENVIRONMENT=production
  #   volumes:
  #     - ./ai-inference-service/model:/app/model
  #   networks:
  #     - app-network
  #   restart: always
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '1.00'
  #         memory: 2G

  db-service:
    build:
      context: ./db-service
      dockerfile: Dockerfile
      cache_from:
        - db-service:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ai_detection
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_detection"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: